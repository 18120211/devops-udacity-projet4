version: 2
jobs:
  build:
    docker:
    - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "requirements.txt" }}
        - v1-dependencies-
    - run:
        name: install dependencies
        command: |
          python3 -m venv venv
          source venv/bin/activate
          make install
          # Install hadolint
          wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
          chmod +x /bin/hadolint
    - run:
        name: Run unit test
        command: source venv/bin/activate make test
    - run:
        name: run lint
        command: |
          source venv/bin/activate
          make lint
workflows:
  default:
    jobs:
    - build
  version: 2

# Original config.yml file:
# # Python CircleCI 2.0 configuration file
# #
# # Check https://circleci.com/docs/2.0/language-python/ for more details
# #
# version: 2.1
# jobs:
#   build:
#     docker:
#       # Use the same Docker base as the project
#       - image: python:3.7.3-stretch
# 
#     working_directory: ~/repo
# 
#     steps:
#       - checkout
# 
#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum \"requirements.txt\" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-
# 
#       - run:
#           name: install dependencies
#           command: |
#             python3 -m venv venv
#             source venv/bin/activate
#             make install
#             # Install hadolint
#             wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\\
#             chmod +x /bin/hadolint
#       # - save_cache:
#       #     paths:
#       #       - ./venv
#       #     key: v1-dependencies-{{ checksum \"requirements.txt\" }}
#       ########### test ##############
#       - run:
#           name: Run unit test
#           command: source venv/bin/activate
#             make test
# 
#       # run lint!
#       - run:
#           name: run lint
#           command: |
#             source venv/bin/activate
#             make lint
# 
# workflows:
#   default:
#     jobs:
#       - build